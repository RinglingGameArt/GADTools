"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
DANNY'S UV-CENTRIC EXPORT

This script allows you to make sure you have everything correctly aligned and placed within your model so you have to
do none of the UV leg work in UDK! 

The Relationship Editor allows you to use Multiple UV sets as if they were Materials- allowing you to make sure you have 
those "high res" textures in the right place

The Texture Editor does the obvious- and allows you to call it up with just the push of ONE button.

And Last but not least- the exported allows you to center everything within the model and then the export button allows you 
to quickly EXPORT IT! 

JUST RUN THE SCRIPT BELOW NOT THIS COMMENT- IF YOU DO IT WILL NOT WORK.
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" 

import maya.cmds as cmds

import logging 

window_name = "controlsWindow"

if cmds.window(window_name, q=True, exists=True):
       cmds.deleteUI(window_name)
       

my_window = cmds.window(window_name, title="TEXTURE TOOLPACK")

my_layout = cmds.columnLayout(parent=my_window, adj=True) 

#Open UV Centric Set Editor
def OpenSet(*args):
    print "Opening Relationship Editor"
    cmds.TextureCentricUVLinkingEditor()
    print cmds.getPanel(vis=True) # Does not contain 'outlinerPanel1'
    cmds.TextureCentricUVLinkingEditor()
    print cmds.getPanel(vis=True) # Contains 'outlinerPanel1'
    
        
#Open UV Editor
def OpenUV(*args):
    print "Opening UV Editor"
    cmds.TextureViewWindow()
    print cmds.getPanel(vis=True) # Does not contain 'outlinerPanel1'
    cmds.TextureViewWindow()
    print cmds.getPanel(vis=True) # Contains 'outlinerPanel1'    
    

#Triple Decker Export
def ReadyForExport(*args):
    print "Ready For Export"
    import maya.cmds as cmds
    
    selection = cmds.ls(sl=True)
    for selected in selection:
        
        cmds.xform(dph=True, cp=True)   
        cmds.move(0, 0, 0)
        cmds.makeIdentity( apply=True, t=1, r=1, s=1, n=2 )
        
if not selection:
    raise logging.warning('Nothing is Selected') 
                

#Export File        
def ExportNow(*args):
    print "Exporting"
    selection = cmds.ls(sl=True)
    for selected in selection:
        
        cmds.fileDialog2(fileFilter="FBX export (*.fbx)", fileMode=0, caption="Save As") 
            
        
cmds.button(c=OpenSet, l="RELATIONSHIP EDITOR")
cmds.button(c=OpenUV, l="UV EDITOR")
cmds.button(c=ReadyForExport, l="READY FOR EXPORT")
cmds.button(c=ExportNow, l="EXPORT")

cmds.showWindow(my_window)
